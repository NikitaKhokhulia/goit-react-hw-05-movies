{"version":3,"file":"static/js/186.27f18e88.chunk.js","mappings":"oRAEMA,EAAU,mCAIVC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAJe,kCAOJC,EAAkB,WAC7B,OAAOH,EAASI,IAAT,sCAA4CL,GACpD,EAEYM,EAAW,SAAAC,GACtB,OAAON,EAASI,IAAT,iBAAuBE,EAAvB,oBAA0CP,GAClD,EAEYQ,EAAe,SAAAC,GAC1B,OAAOR,EAASI,IAAT,gBAAsBI,EAAtB,4BAA4CT,GACpD,EAEYU,EAAkB,SAAAD,GAC7B,OAAOR,EAASI,IAAT,gBAAsBI,EAAtB,4BAA4CT,GACpD,EAEYW,EAAkB,SAAAC,GAC7B,OAAOX,EAASI,IAAT,+BAAqCL,EAArC,kBAAsDY,GAC9D,C,8ECED,UA1BgB,WACd,IAAQL,GAAYM,EAAAA,EAAAA,MAAZN,QACR,GAA8BO,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRP,EAAAA,EAAAA,IAAgBH,GAASW,MAAK,SAAAC,GAAG,OAAIH,EAAWG,EAAIC,KAAKC,QAAxB,GAClC,GAAE,CAACd,KAGF,wBACGQ,EAAQO,OAAS,EAChBP,EAAQQ,KAAI,SAAAC,GACV,OACE,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOf,GAKnB,KAED,qEAIP,C","sources":["Api/getMovies.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '4bfe41b6169c7be93b3bc557879c6ed6';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n// export const IMAGE_URL =\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n});\n\nexport const getTrendsMovies = () => {\n  return instance.get(`/trending/movie/day?api_key=${API_KEY}`);\n};\n\nexport const getMovie = movieId => {\n  return instance.get(`/movie/${movieId}?api_key=${API_KEY}`);\n};\n\nexport const getMovieCast = id => {\n  return instance.get(`movie/${id}/credits?api_key=${API_KEY}`);\n};\n\nexport const getMovieReviews = id => {\n  return instance.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n};\n\nexport const getMoviesByName = query => {\n  return instance.get(`search/movie?api_key=${API_KEY}&query=${query}`);\n};\n","import { getMovieReviews } from 'Api/getMovies';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(res => setReviews(res.data.results));\n  }, [movieId]);\n\n  return (\n    <ul>\n      {reviews.length > 1 ? (\n        reviews.map(review => {\n          return (\n            <li key={review.id}>\n              <h2>Author: {review.author}</h2>\n              <p>{review.content}</p>\n            </li>\n          );\n        })\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","instance","axios","baseURL","getTrendsMovies","get","getMovie","movieId","getMovieCast","id","getMovieReviews","getMoviesByName","query","useParams","useState","reviews","setReviews","useEffect","then","res","data","results","length","map","review","author","content"],"sourceRoot":""}